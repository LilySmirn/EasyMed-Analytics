// generate-components-doc.js
const fs = require("fs");
const path = require("path");

const COMPONENTS_DIR = path.join("src", "components");
const DOCS_FILE = path.join("docs", "components.md");

const TREMOR_COMPONENTS = [
    "Button.tsx",
    "Card.tsx",
    "Drawer.tsx",
    "ProgressBar.tsx",
    "Select.tsx",
    "Sidebar.tsx",
    "Table.tsx",
    "Tooltip.tsx",
    "FilterSelect.tsx",
];

const HEADER = `# üß© –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞

–≠—Ç–æ—Ç —Ñ–∞–π–ª —á–∞—Å—Ç–∏—á–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ (—Å–º. \`generate-components-doc.js\`).

–í –ø—Ä–æ–µ–∫—Ç–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–∑ –ø–∞–ø–∫–∏ \`src/components/\`.
–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∏—Ö –ø–æ—Å—Ç—Ä–æ–µ–Ω—ã –Ω–∞ –±–∞–∑–µ **Tremor UI**, –æ—Å—Ç–∞–ª—å–Ω—ã–µ ‚Äî –∫–∞—Å—Ç–æ–º–Ω—ã–µ React-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã,
—Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é **TailwindCSS**.

---

`;

function ensureDocsFile() {
    if (!fs.existsSync(DOCS_FILE)) {
        fs.mkdirSync(path.dirname(DOCS_FILE), { recursive: true });
        fs.writeFileSync(DOCS_FILE, HEADER, "utf8");
        console.log("üìÑ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π docs/components.md");
    }
}

function readDocs() {
    return fs.readFileSync(DOCS_FILE, "utf8");
}

function getExistingComponentNames(content) {
    const regex = /###\s+(\S+\.tsx)/g;
    const names = new Set();
    let match;
    while ((match = regex.exec(content))) {
        names.add(match[1].trim());
    }
    return names;
}

function appendNewComponents() {
    ensureDocsFile();

    const existingContent = readDocs();
    const existingNames = getExistingComponentNames(existingContent);

    const files = fs.readdirSync(COMPONENTS_DIR).filter(f => f.endsWith(".tsx"));
    const newComponents = files.filter(f => !existingNames.has(f));

    if (newComponents.length === 0) {
        console.log("‚úÖ –ù–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ.");
        return;
    }

    let additions = "\n";
    for (const file of newComponents.sort()) {
        const name = file.replace(".tsx", "");
        const isTremor = TREMOR_COMPONENTS.includes(file);
        const desc = isTremor
            ? `–û—Å–Ω–æ–≤–∞–Ω –Ω–∞ **Tremor ${name}** –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω —Å –ø–æ–º–æ—â—å—é **TailwindCSS**.`
            : `–ö–∞—Å—Ç–æ–º–Ω—ã–π React-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç, —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Å –ø–æ–º–æ—â—å—é **TailwindCSS**.`;

        additions += `### **${file}**\n${desc}\n\n---\n\n`;
        console.log(`‚ûï –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: ${file}`);
    }

    fs.appendFileSync(DOCS_FILE, additions, "utf8");
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã ${newComponents.length} –Ω–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç(–æ–≤) –≤ docs/components.md`);
}

appendNewComponents();
